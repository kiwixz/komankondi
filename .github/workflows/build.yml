name: build
on: [push, pull_request]

jobs:
  linux:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        buildtype: [release, dev, debug]
    steps:
    - name: install
      run: |
        sudo apt-get update
        sudo apt-get install meson qtdeclarative5-dev
    - name: checkout
      uses: actions/checkout@v3
      with:
        submodules: true
    - name: setup vcpkg cache
      uses: actions/cache@v3
      with:
        key: vcpkg_linux_${{hashFiles('vcpkg.json')}}_${{hashFiles('.git/modules/vcpkg/HEAD')}}_${{hashFiles('vcpkg_ports/**')}}
        path: ~/.cache/vcpkg
    - name: configure
      run: ./configure --buildtype=${{matrix.buildtype}} --flags=-Werror
    - name: build
      run: ninja -C build -k 0
    - name: build
      run: ./dist
    - name: upload dist
      uses: actions/upload-artifact@v3
      with:
        name: ubuntu-${{matrix.buildtype}}
        path: build/komankondi.tar.xz
    - name: test
      run: ninja -C build test
    - name: format
      run: ninja -C build clang-format-check
    - name: tidy
      run: |
        meson configure build -Dextra_warnings=false
        tmp=$(mktemp -d)
        echo -e '#!/bin/sh\nexec /usr/bin/clang-tidy --warnings-as-errors=* "$@"' >$tmp/clang-tidy
        chmod +x $tmp/clang-tidy
        PATH="$tmp:$PATH" ninja -C build clang-tidy

  windows:
    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix:
        buildtype: [release, dev, debug]
    steps:
    - name: install
      run: |
        pip install aqtinstall==3.1.* meson==1.2.*
        aqt install-qt -O "$env:RUNNER_TEMP\qt" windows desktop 5.15.2 win64_msvc2019_64 --archives qtbase qtdeclarative qttools
        echo "$env:RUNNER_TEMP\qt\5.15.2\msvc2019_64\bin" >>"$env:GITHUB_PATH"
    - name: checkout
      uses: actions/checkout@v3
      with:
        submodules: true
    - name: setup vcpkg cache
      uses: actions/cache@v3
      with:
        key: vcpkg_windows_${{hashFiles('vcpkg.json')}}_${{hashFiles('.git/modules/vcpkg/HEAD')}}_${{hashFiles('vcpkg_ports/**')}}
        path: ~\AppData\Local\vcpkg
    - name: configure
      env:
        CXX: clang++
        CXX_LD: lld
      run: python configure --buildtype=${{matrix.buildtype}} --flags=-Werror
    - name: build
      run: ninja -C build -k 0
    - name: build
      run: python dist
    - name: upload dist
      uses: actions/upload-artifact@v3
      with:
        name: windows-${{matrix.buildtype}}
        path: build/komankondi.zip
    - name: test
      run: ninja -C build test
    - name: tidy
      run: ninja -C build clang-tidy
